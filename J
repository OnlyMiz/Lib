--// ðŸ“¦ ModernUI Library - Supports Mobile & PC --// âœ… Features: Tabs, Toggles, Buttons, TextBoxes, Sliders, Dropdowns, Draggable UI with Animation --// ðŸ“Œ Usage: -- local UI = loadstring(game:HttpGet("https://yourhost.com/ModernUILib.lua"))() -- local window = UI:CreateWindow("My UI") -- window:CreateTab("Main"):AddButton("Hello", function() print("Clicked") end)

local ModernUI = {} local TweenService = game:GetService("TweenService") local UserInputService = game:GetService("UserInputService") local Players = game:GetService("Players") local Player = Players.LocalPlayer local Mouse = Player:GetMouse()

-- Helper Functions local function create(instance, props) local obj = Instance.new(instance) for i, v in pairs(props) do obj[i] = v end return obj end

-- Drag Logic local function makeDraggable(frame) local dragToggle, dragInput, dragStart, startPos frame.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then dragToggle = true dragStart = input.Position startPos = frame.Position input.Changed:Connect(function() if input.UserInputState == Enum.UserInputState.End then dragToggle = false end end) end end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

game:GetService("RunService").Heartbeat:Connect(function()
    if dragToggle and dragInput then
        local delta = dragInput.Position - dragStart
        frame.Position = startPos + UDim2.new(0, delta.X, 0, delta.Y)
    end
end)

end

-- Main UI Creation function ModernUI:CreateWindow(title) local screenGui = create("ScreenGui", { Parent = Player:WaitForChild("PlayerGui"), Name = "ModernUI", ResetOnSpawn = false })

local main = create("Frame", {
    Size = UDim2.new(0, 450, 0, 300),
    Position = UDim2.new(0.5, -225, 0.5, -150),
    BackgroundColor3 = Color3.fromRGB(30, 30, 30),
    AnchorPoint = Vector2.new(0.5, 0.5),
    Parent = screenGui
})
create("UICorner", {CornerRadius = UDim.new(0, 10), Parent = main})

makeDraggable(main)

local tabButtons = create("Frame", {
    Parent = main,
    Size = UDim2.new(1, 0, 0, 30),
    BackgroundTransparency = 1
})

local tabs = {}
local currentTab

function ModernUI:CreateTab(name)
    local button = create("TextButton", {
        Text = name,
        Size = UDim2.new(0, 100, 1, 0),
        BackgroundColor3 = Color3.fromRGB(45, 45, 45),
        TextColor3 = Color3.new(1, 1, 1),
        Parent = tabButtons
    })
    create("UICorner", {Parent = button})

    local content = create("ScrollingFrame", {
        Parent = main,
        Position = UDim2.new(0, 0, 0, 35),
        Size = UDim2.new(1, 0, 1, -35),
        BackgroundTransparency = 1,
        ScrollBarThickness = 5,
        Visible = false,
        CanvasSize = UDim2.new(0, 0, 5, 0)
    })

    local layout = create("UIListLayout", {
        Parent = content,
        Padding = UDim.new(0, 6)
    })

    button.MouseButton1Click:Connect(function()
        if currentTab then currentTab.Visible = false end
        content.Visible = true
        currentTab = content
    end)

    local tab = {}

    function tab:AddButton(text, callback)
        local btn = create("TextButton", {
            Text = text,
            Size = UDim2.new(0, 200, 0, 30),
            BackgroundColor3 = Color3.fromRGB(60, 60, 60),
            TextColor3 = Color3.new(1, 1, 1),
            Parent = content
        })
        create("UICorner", {Parent = btn})
        btn.MouseButton1Click:Connect(callback)
    end

    function tab:AddToggle(text, callback)
        local state = false
        local toggle = create("TextButton", {
            Text = text .. ": OFF",
            Size = UDim2.new(0, 200, 0, 30),
            BackgroundColor3 = Color3.fromRGB(60, 60, 60),
            TextColor3 = Color3.new(1, 1, 1),
            Parent = content
        })
        create("UICorner", {Parent = toggle})
        toggle.MouseButton1Click:Connect(function()
            state = not state
            toggle.Text = text .. ": " .. (state and "ON" or "OFF")
            callback(state)
        end)
    end

    function tab:AddTextbox(placeholder, callback)
        local tb = create("TextBox", {
            PlaceholderText = placeholder,
            Text = "",
            Size = UDim2.new(0, 200, 0, 30),
            BackgroundColor3 = Color3.fromRGB(60, 60, 60),
            TextColor3 = Color3.new(1, 1, 1),
            Parent = content
        })
        create("UICorner", {Parent = tb})
        tb.FocusLost:Connect(function()
            callback(tb.Text)
        end)
    end

    function tab:AddSlider(min, max, callback)
        local slider = create("Frame", {
            Size = UDim2.new(0, 200, 0, 20),
            BackgroundColor3 = Color3.fromRGB(80, 80, 80),
            Parent = content
        })
        create("UICorner", {Parent = slider})

        local handle = create("Frame", {
            Size = UDim2.new(0, 10, 1, 0),
            BackgroundColor3 = Color3.fromRGB(200, 200, 200),
            Parent = slider
        })
        create("UICorner", {Parent = handle})

        local dragging = false

        handle.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
            end
        end)
        UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = false
            end
        end)
        game:GetService("RunService").RenderStepped:Connect(function()
            if dragging then
                local percent = math.clamp((Mouse.X - slider.AbsolutePosition.X) / slider.AbsoluteSize.X, 0, 1)
                handle.Position = UDim2.new(percent, -5, 0, 0)
                callback(math.floor(min + (max - min) * percent))
            end
        end)
    end

    function tab:AddDropdown(options, callback)
        local ddBtn = create("TextButton", {
            Text = "Select Option",
            Size = UDim2.new(0, 200, 0, 30),
            BackgroundColor3 = Color3.fromRGB(60, 60, 60),
            TextColor3 = Color3.new(1, 1, 1),
            Parent = content
        })
        create("UICorner", {Parent = ddBtn})

        local ddFrame = create("Frame", {
            Size = UDim2.new(0, 200, 0, #options * 30),
            Position = UDim2.new(0, 0, 0, 30),
            BackgroundColor3 = Color3.fromRGB(45, 45, 45),
            Visible = false,
            Parent = ddBtn
        })
        create("UICorner", {Parent = ddFrame})

        for _, opt in ipairs(options) do
            local optBtn = create("TextButton", {
                Text = opt,
                Size = UDim2.new(1, 0, 0, 30),
                BackgroundTransparency = 1,
                TextColor3 = Color3.new(1, 1, 1),
                Parent = ddFrame
            })
            optBtn.MouseButton1Click:Connect(function()
                ddBtn.Text = opt
                ddFrame.Visible = false
                callback(opt)
            end)
        end

        ddBtn.MouseButton1Click:Connect(function()
            ddFrame.Visible = not ddFrame.Visible
        end)
    end

    tabs[name] = tab
    return tab
end

return ModernUI

end

return ModernUI
